{"version":3,"sources":["logo.svg","components/HeaderComponent.js","context.js","components/ProductComponent.js","components/ProductListComponent.js","components/CartTotalsComponent.js","components/CartItemComponent.js","components/CartListComponent.js","components/CartComponent.js","components/CheckoutComponent.js","components/HomeComponent.js","components/DefaultComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","type","id","htmlFor","Component","ProductContext","React","createContext","ProductProvider","props","setProducts","resetProducts","tempProducts","console","log","forEach","item","singleItem","setState","products","getItem","state","find","addToCart","index","indexOf","product","inCart","count","price","total","cart","addTotals","clearCart","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","map","cartTotal","openModal","modalOpen","closeModal","error","isLoaded","fetch","then","res","json","results","Provider","value","this","children","ProductConsumer","Consumer","Product","brandName","productName","quantity","MRP","imageUrl","offerText","list","onClick","disabled","ProductList","key","CartTotal","CartItem","CartList","Cart","class","length","Checkout","toggle","prevState","modal","alertPayment","alert","Button","color","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Home","$","window","scroll","scrollTop","height","document","css","Default","location","pathname","Main","exact","path","component","App","basename","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,yQCKtBC,E,iLAEb,OACI,4BAAQC,UAAU,UACd,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,QAAO,yBAAKE,IAAKC,IAAMC,IAAI,WAClD,2BAAOJ,UAAU,WAAWK,KAAK,WAAWC,GAAG,aAC/C,2BAAON,UAAU,YAAYO,QAAQ,YAAW,0BAAMP,UAAU,cAChE,wBAAIA,UAAU,QACV,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAQ,gCAAQ,uBAAGD,UAAU,oBAArB,gB,GATLQ,a,8OCHpC,IAAMC,EAAiBC,IAAMC,gBAIvBC,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAkCVC,YAAc,SAACC,GACX,IAAIC,EAAe,GACnBC,QAAQC,IAAIH,GACZA,EAAcI,SAAQ,SAAAC,GAClB,IAAMC,E,yVAAU,IAAOD,GACvBJ,EAAY,sBAAOA,GAAP,CAAqBK,OAErC,EAAKC,UAAS,WACV,MAAM,CAACC,SAAUP,OA3CN,EAgDnBQ,QAAU,SAAClB,GAEP,OADgB,EAAKmB,MAAMF,SAASG,MAAK,SAAAN,GAAI,OAAIA,EAAKd,KAAKA,MAjD5C,EAqDnBqB,UAAY,SAACrB,GACT,IAAIU,EAAe,EAAKS,MAAMF,SACxBK,EAAQZ,EAAaa,QAAQ,EAAKL,QAAQlB,IAC1CwB,EAAUd,EAAaY,GAC7BE,EAAQC,QAAS,EACjBD,EAAQE,MAAQ,EAChB,IAAMC,EAAQH,EAAQG,MACtBH,EAAQI,MAAQD,EAChB,EAAKX,UAAS,WACV,MAAO,CAAEC,SAASP,EAAcmB,KAAK,GAAD,mBAAM,EAAKV,MAAMU,MAAjB,CAAuBL,QAE/D,WACI,EAAKM,gBAjEM,EAuEnBC,UAAY,WACR,EAAKf,UAAS,WACV,MAAO,CAACa,KAAK,OACf,WAEE,EAAKrB,YAAY,EAAKW,MAAMV,eAC5B,EAAKqB,gBA7EM,EAiFnBE,UAAY,SAAChC,GACT,IAAIiC,EAAS,YAAK,EAAKd,MAAMU,MACvBK,EAAkBD,EAASb,MAAK,SAAAN,GAAI,OAAEA,EAAKd,KAAKA,KAChDsB,EAAQW,EAASV,QAAQW,GACzBV,EAAUS,EAASX,GACzBE,EAAQE,MAAQF,EAAQE,MAAQ,EAChCF,EAAQI,MAAQJ,EAAQE,MAAQF,EAAQG,MACxC,EAAKX,UAAS,WAAK,MAAO,CAACa,KAAK,YAAII,OAAY,WAAK,EAAKH,gBAxF3C,EA2FnBK,UAAY,SAACnC,GACT,IAAIiC,EAAS,YAAK,EAAKd,MAAMU,MACvBK,EAAkBD,EAASb,MAAK,SAAAN,GAAI,OAAEA,EAAKd,KAAKA,KAChDsB,EAAQW,EAASV,QAAQW,GACzBV,EAAUS,EAASX,GACzBE,EAAQE,MAAQF,EAAQE,MAAQ,EACV,IAAlBF,EAAQE,MACR,EAAKU,WAAWpC,IAGhBwB,EAAQI,MAAQJ,EAAQE,MAAQF,EAAQG,MAC5C,EAAKX,UAAS,WAAK,MAAO,CAACa,KAAK,YAAII,OAAY,WAAK,EAAKH,iBAtG3C,EA0GnBM,WAAa,SAACpC,GACV,IAAIU,EAAY,YAAO,EAAKS,MAAMF,UAC9BgB,EAAQ,YAAO,EAAKd,MAAMU,MAC9BI,EAAWA,EAASI,QAAO,SAAAvB,GAAI,OAAIA,EAAKd,KAAMA,KAC9C,IAAMsB,EAAMZ,EAAaa,QAAQ,EAAKL,QAAQlB,IAC1CsC,EAAgB5B,EAAaY,GACjCgB,EAAeb,QAAO,EACtBa,EAAeZ,MAAQ,EACvBY,EAAeV,MAAQ,EACvB,EAAKZ,UAAS,WACV,MAAM,CACFa,KAAK,YAAII,GACThB,SAAS,YAAIP,OAEnB,WACE,EAAKoB,gBAzHM,EA8HnBA,UAAY,WACR,IAAIF,EAAQ,EACZ,EAAKT,MAAMU,KAAKU,KAAI,SAAAf,GAAO,OAAII,GAASJ,EAAQI,SAChD,EAAKZ,UAAS,WACV,MAAM,CACFwB,UAAUZ,OAnIH,EAyInBa,UAAY,WACR,EAAKzB,UAAS,WACV,MAAO,CAAC0B,WAAW,OA3IR,EA+InBC,WAAa,WACT,EAAK3B,UAAS,WACV,MAAM,CAAC0B,WAAU,OA/IrB,EAAKvB,MAAQ,CACTF,SAAU,GACVR,cAAe,GACfoB,KAAM,GACNa,WAAW,EACXF,UAAW,EACXI,MAAO,KACPC,UAAU,GATC,E,iFAaE,IAAD,OAChBC,MAAM,8EACLC,MAAM,SAAAC,GAAG,OAAGA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAK1C,YAAY0C,GACjB,EAAKlC,SAAS,CACV6B,UAAU,EACVpC,cAAeyC,OAGvB,SAACN,GACG,EAAK5B,SAAS,CACV6B,UAAS,EACTD,e,+BA2HZ,OACI,kBAACzC,EAAegD,SAAhB,CAAyBC,MAAO,CAC5BnC,SAAUoC,KAAKlC,MAAMF,SACrBY,KAAMwB,KAAKlC,MAAMU,KACjBW,UAAWa,KAAKlC,MAAMqB,UACtB/B,cAAe4C,KAAKlC,MAAMV,cAC1BiC,UAAWW,KAAKlC,MAAMuB,UACtBrB,UAAWgC,KAAKhC,UAChBW,UAAWqB,KAAKrB,UAChBG,UAAWkB,KAAKlB,UAChBC,WAAYiB,KAAKjB,WACjBL,UAAWsB,KAAKtB,UAChBU,UAAWY,KAAKZ,UAChBE,WAAWU,KAAKV,aAEfU,KAAK9C,MAAM+C,c,GAtKEpD,aA4KxBqD,EAAkBpD,EAAeqD,SC/KlBC,E,iLACP,IAAD,EAC2FJ,KAAK9C,MAAMiB,QAAnGxB,EADH,EACGA,GAAI0D,EADP,EACOA,UAAWC,EADlB,EACkBA,YAAaC,EAD/B,EAC+BA,SAAUjC,EADzC,EACyCA,MAAOkC,EADhD,EACgDA,IAAKC,EADrD,EACqDA,SAAUC,EAD/D,EAC+DA,UAAWtC,EAD1E,EAC0EA,OAAQC,EADlF,EACkFA,MACvF,OACI,yBAAKhC,UAAU,kBACX,kBAAC6D,EAAD,MACM,SAAAS,GAAI,OACF,6BACA,yBAAKtE,UAAU,QACf,yBAAKA,UAAU,eACX,yBAAKA,UAAU,iBACX,yBAAKE,IAAKkE,EAAUhE,IAAK6D,IACzB,uBAAGjE,UAAU,cAAcqE,KAGnC,yBAAKrE,UAAU,kBACX,wBAAIA,UAAU,cAAcgE,GAC5B,wBAAIhE,UAAU,gBAAgBiE,GAC9B,uBAAGjE,UAAU,YAAYkE,GACzB,uBAAGlE,UAAU,OAAOmE,GACpB,wBAAInE,UAAU,SAAd,SAAwBiC,GACxB,yBAAKjC,UAAS,gCAA2B+B,EAAO,UAAU,WACtD,6BACI,yBAAK/B,UAAU,MAAMuE,QAAS,WAAKD,EAAK7B,UAAUnC,KAAlD,KACA,0BAAMN,UAAU,OAAOgC,GACvB,yBAAKhC,UAAU,MAAMuE,QAAS,WAAKD,EAAKhC,UAAUhC,KAAlD,OAGR,4BAAQN,UAAS,sBAAiB+B,EAAO,SAAS,UAAjC,KAA+CyC,WAAUzC,EAAuBwC,QAAS,WACtGD,EAAK3C,UAAUrB,KAEdyB,EAAQ,wBAAIyC,UAAQ,GAAZ,WAA4B,wBAAIA,UAAQ,GAAZ,2B,GA/BhChE,aCChBiE,E,iLAGb,OACI,oCACI,yBAAKzE,UAAU,eACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,mBACX,kBAAC6D,EAAD,MAEK,SAACS,GACE,OAAOA,EAAK/C,SAASsB,KAAK,SAAAf,GACtB,OAAO,kBAAC,EAAD,CAAS4C,IAAM5C,EAAQxB,GAAKwB,QAAUA,kB,GAZ5CtB,aCD1B,SAASmE,EAAT,GAA6B,IAATjB,EAAQ,EAARA,MACxBZ,EAAuBY,EAAvBZ,UAAYT,EAAWqB,EAAXrB,UAEnB,OACI,6BACI,yBAAKrC,UAAU,uBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,4BAAQD,UAAU,oBAAoBuE,QAAS,kBAAIlC,MAAnD,gBAKR,4BACI,2CACA,yCAAUS,MChBf,SAAS8B,EAAT,GAAiC,IAAdxD,EAAa,EAAbA,KAAKsC,EAAQ,EAARA,MAC7BpD,EAA6Cc,EAA7Cd,GAAG2D,EAA0C7C,EAA1C6C,YAAYG,EAA8BhD,EAA9BgD,SAASnC,EAAqBb,EAArBa,MAAMC,EAAed,EAAfc,MAAMF,EAASZ,EAATY,MACnCM,EAAkCoB,EAAlCpB,UAAUG,EAAwBiB,EAAxBjB,UAAUC,EAAcgB,EAAdhB,WAC3B,OACI,yBAAK1C,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKE,IAAKkE,EAAUhE,IAAK6D,KAE7B,yBAAKjE,UAAU,YACX,8BAAOiE,IAEX,yBAAKjE,UAAU,YACf,uCAAQiC,IAER,yBAAKjC,UAAU,YACX,yBAAKA,UAAU,iBACX,6BACI,yBAAKA,UAAU,MAAMuE,QAAS,kBAAI9B,EAAUnC,KAA5C,KACA,0BAAMN,UAAU,OAAOgC,GACvB,yBAAKhC,UAAU,MAAMuE,QAAS,kBAAIjC,EAAUhC,KAA5C,QAIZ,yBAAKN,UAAU,YACX,yBAAKA,UAAU,aAAauE,QAAS,kBAAI7B,EAAWpC,KAChD,uBAAGN,UAAU,kBAIrB,yBAAKA,UAAU,YACX,iDAAkBkC,KC7BnB,SAAS2C,EAAT,GAA4B,IAATnB,EAAQ,EAARA,MACvBvB,EAAQuB,EAARvB,KACP,OACI,yBAAKnC,UAAU,kBACVmC,EAAKU,KAAI,SAAAzB,GACN,OAAO,kBAACwD,EAAD,CAAUF,IAAKtD,EAAKd,GAAIc,KAAMA,EAAMsC,MAAOA,Q,ICH7CoB,E,iLAEb,OACI,yBAAKC,MAAM,gBACP,kBAAClB,EAAD,MACK,SAACH,GAEE,OADcA,EAAPvB,KACC6C,OAAO,EAEP,oCACI,uCACA,kBAACH,EAAD,CAAUnB,MAAOA,IACjB,kBAACiB,EAAD,CAAWjB,MAAOA,KAMtB,yBAAK1D,UAAU,mBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,kE,GArBVQ,a,wCCAbyE,E,YAEjB,WAAYpE,GAAO,IAAD,8BACd,4CAAMA,KAMVqE,OAAO,WACH,EAAK5D,UAAS,SAAA6D,GAAS,MAAK,CAC1BC,OAAQD,EAAUC,WATN,EAalBC,aAAa,WACTC,MAAM,2BAZN,EAAK7D,MAAM,CACP2D,OAAM,GAHI,E,sEAgBR,IAAD,OAEL,OACI,kBAACvB,EAAD,MACC,SAACH,GAAU,IACPvB,EAAkBuB,EAAlBvB,KAAME,EAAYqB,EAAZrB,UACb,OACC,oCACC,kBAACkD,EAAA,EAAD,CAAQC,MAAM,SAASjB,QAAS,EAAKW,QAArC,aACA,kBAACO,EAAA,EAAD,CAAOC,OAAQ,EAAKjE,MAAM2D,MAAOF,OAAQ,EAAKA,OAAQlF,UAAW,EAAKa,MAAMb,WAC5E,kBAAC2F,EAAA,EAAD,CAAaT,OAAQ,EAAKA,QAA1B,iBACA,kBAACU,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACC,EAAA,EAAD,KACI,kBAACN,EAAA,EAAD,CAAQvF,UAAS,UAAKmC,EAAK6C,OAAO,UAAU,SAA3B,KAAwCQ,MAAM,UAAWjB,QAAS,WAAK,EAAKc,eAC7FhD,MADA,sBAC2C,IAC3C,kBAACkD,EAAA,EAAD,CAAQC,MAAM,YAAYjB,QAAS,EAAKW,QAAxC,oB,GAnCsB1E,a,iBCEjBsF,E,4LAEbC,IAAEC,QAAQC,QAAO,WACVF,IAAEC,QAAQE,YAAcH,IAAEC,QAAQG,SAAWJ,IAAEK,UAAUD,SAAW,IACnEJ,IAAE,uBAAuBM,IAAI,WAAW,aAGxCN,IAAE,uBAAuBM,IAAI,WAAW,SACxCN,IAAE,uBAAuBM,IAAI,SAAS,S,+BAK9C,OACI,kBAACxC,EAAD,MACK,SAACS,GACC,OACC,yBAAKS,MAAM,gBACP,kBAAC,EAAD,MACA,yBAAKA,MAAM,sBACP,kBAACJ,EAAD,CAAWjB,MAAOY,IAClB,kBAAC,EAAD,e,GArBM9D,aCLb8F,E,iLAEb,OACI,yBAAKtG,UAAU,qBACX,mCACA,qCACA,8CACA,gDAAqB,0BAAMA,UAAU,aAAa2D,KAAK9C,MAAM0F,SAASC,UACrE,IADD,sB,GAPqBhG,aCKhBiG,E,iLAGb,OACI,6BACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,QAAQC,UAAW9B,IAC/B,kBAAC,IAAD,CAAO8B,UAAWN,W,GAVJ9F,aCcnBqG,G,uLAbX,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAeC,SAAS,kBACtB,yBAAK9G,UAAU,iBACb,kBAAC,EAAD,a,GANMQ,cCMEuG,QACW,cAA7Bf,OAAOO,SAASS,UAEe,UAA7BhB,OAAOO,SAASS,UAEhBhB,OAAOO,SAASS,SAASC,MACvB,2DCLNC,IAASC,OAAO,CAAC,kBAAC,EAAD,CAAKzC,IAAI,MAAQ,mBANnB,kBACX,4BAAQ1E,UAAU,UAChB,wCAI4B,CAAQ0E,IAAI,OAAS0B,SAASgB,eAAe,SDoHzE,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,MAAK,SAAAmE,GACjCA,EAAaC,kB","file":"static/js/main.d6802141.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c7721a56.svg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../scss/menu.scss';\r\nimport logo from '../logo.svg';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <Link to=\"/\" className=\"logo\"><img src={logo} alt=\"store\" /></Link>\r\n                <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n                <label className=\"menu-icon\" htmlFor=\"menu-btn\"><span className=\"nav-icon\"></span></label>\r\n                <ul className=\"menu\">\r\n                    <li><Link to=\"/\">Products</Link></li>\r\n                    <li><Link to=\"/cart\"><button><i className=\"fa fa-cart-plus\" />Cart</button></Link></li>\r\n                </ul>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nconst ProductContext = React.createContext();\r\n//Provider\r\n//Consumer\r\n\r\nclass ProductProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            resetProducts: [],\r\n            cart: [],\r\n            modalOpen: false,\r\n            cartTotal: 0,\r\n            error: null,\r\n            isLoaded: false,        \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://raw.githubusercontent.com/Shiivani/product-db/master/products.json')\r\n        .then( res=> res.json())\r\n        .then(\r\n            (results) => {\r\n                this.setProducts(results);\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    resetProducts: results\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded:true,\r\n                    error\r\n                });\r\n            }\r\n            \r\n        )\r\n        \r\n    }\r\n\r\n    setProducts = (resetProducts) =>{\r\n        let tempProducts = [];\r\n        console.log(resetProducts);\r\n        resetProducts.forEach(item =>{\r\n            const singleItem = {...item};\r\n            tempProducts = [...tempProducts, singleItem];\r\n        })\r\n        this.setState(() =>{\r\n            return{products: tempProducts}\r\n        })\r\n    \r\n    };\r\n\r\n    getItem = (id) =>{\r\n        const product = this.state.products.find(item => item.id===id);\r\n        return product;\r\n    }\r\n\r\n    addToCart = (id) =>{\r\n        let tempProducts = this.state.products;\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        const product = tempProducts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        this.setState(()=>{\r\n            return { products:tempProducts, cart: [...this.state.cart, product] }\r\n        },\r\n        ()=>{\r\n            this.addTotals();\r\n        }\r\n        );\r\n\r\n    };\r\n    \r\n    clearCart = () =>{\r\n        this.setState(() =>{\r\n            return {cart:[]}\r\n        },() =>{\r\n            //fresh pair of copies of products\r\n            this.setProducts(this.state.resetProducts);\r\n            this.addTotals();\r\n        })\r\n        \r\n    }\r\n    increment = (id) => {\r\n        let tempCart= [...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item.id===id);\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        product.count = product.count + 1;\r\n        product.total = product.count * product.price;\r\n        this.setState(()=>{return {cart:[...tempCart]}},()=>{this.addTotals();})\r\n    };\r\n\r\n    decrement = (id) => {\r\n        let tempCart= [...this.state.cart];\r\n        const selectedProduct = tempCart.find(item=>item.id===id);\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        product.count = product.count - 1;\r\n        if (product.count === 0) {\r\n            this.removeItem(id);\r\n        }\r\n        else{\r\n            product.total = product.count * product.price;\r\n        this.setState(()=>{return {cart:[...tempCart]}},()=>{this.addTotals();})\r\n        }\r\n    };\r\n\r\n    removeItem = (id) => {\r\n        let tempProducts = [...this.state.products];\r\n        let tempCart = [...this.state.cart];\r\n        tempCart = tempCart.filter(item => item.id !==id);\r\n        const index=tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct= tempProducts[index];\r\n        removedProduct.inCart=false;\r\n        removedProduct.count = 0;\r\n        removedProduct.total = 0;\r\n        this.setState(()=>{\r\n            return{\r\n                cart:[...tempCart],\r\n                products:[...tempProducts]\r\n            };\r\n        },()=>{\r\n            this.addTotals();\r\n        });\r\n\r\n    }\r\n    \r\n    addTotals = () => {\r\n        let total = 0;\r\n        this.state.cart.map(product =>(total += product.total));\r\n        this.setState(()=>{\r\n            return{\r\n                cartTotal:total\r\n            };\r\n               \r\n        });\r\n    }\r\n\r\n    openModal = () =>{\r\n        this.setState(()=>{\r\n            return {modalOpen: true};\r\n        });\r\n    }\r\n\r\n    closeModal = () =>{\r\n        this.setState(() =>{\r\n            return{modalOpen:false};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{\r\n                products: this.state.products,\r\n                cart: this.state.cart,\r\n                cartTotal: this.state.cartTotal,\r\n                resetProducts: this.state.resetProducts,\r\n                modalOpen: this.state.modalOpen,\r\n                addToCart: this.addToCart,\r\n                increment: this.increment,\r\n                decrement: this.decrement,\r\n                removeItem: this.removeItem,\r\n                clearCart: this.clearCart,\r\n                openModal: this.openModal,\r\n                closeModal:this.closeModal,\r\n                }}>\r\n               { this.props.children } \r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\nexport { ProductProvider, ProductConsumer };\r\n","import React, { Component } from 'react';\r\nimport { ProductConsumer } from '../context';\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        const { id, brandName, productName, quantity, price, MRP, imageUrl, offerText, inCart, count }= this.props.product;\r\n        return (\r\n            <div className=\"productWrapper\">\r\n                <ProductConsumer>\r\n                    { list => (\r\n                        <div>\r\n                        <div className=\"Card\">\r\n                        <div className=\"productCard\">\r\n                            <div className=\"img-container\">\r\n                                <img src={imageUrl} alt={productName} />\r\n                                <p className=\"offer-text\">{offerText}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"productDetails\">\r\n                            <h2 className=\"brand-name\">{brandName}</h2>\r\n                            <h3 className=\"product-name\">{productName}</h3>\r\n                            <p className=\"quantity\">{quantity}</p>\r\n                            <p className=\"mrp\">{MRP}</p>\r\n                            <h4 className=\"price\">₹{price}</h4>\r\n                            <div className={`product-btn-container ${inCart?\"visible\":\"hidden\"}` }>\r\n                                <div>\r\n                                    <div className=\"btn\" onClick={()=>{list.decrement(id);}}>-</div>\r\n                                    <span className=\"btn\">{count}</span>\r\n                                    <div className=\"btn\" onClick={()=>{list.increment(id);}}>+</div>\r\n                                </div>\r\n                            </div>\r\n                            <button className={`cart-button ${inCart?\"hidden\":\"visible\"} `} disabled={inCart ? true : false} onClick={() => {\r\n                                list.addToCart(id);\r\n                            }}>\r\n                                {inCart?(<h3 disabled>In Cart</h3>):(<h3 disabled>Add To Cart</h3>)}\r\n                            </button>\r\n                           \r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    )}\r\n                    \r\n                </ProductConsumer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Product from './ProductComponent';\r\nimport { ProductConsumer } from '../context';\r\n\r\nexport default class ProductList extends Component {\r\n   const \r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"productList\">\r\n                    <div className=\"productList-container\">\r\n                        <div className=\"productList-row\">\r\n                            <ProductConsumer>\r\n\r\n                                {(list) => {\r\n                                    return list.products.map( product => {\r\n                                        return <Product key={ product.id } product={ product } />\r\n                                    })\r\n                                    \r\n                                }}\r\n                                \r\n                            </ProductConsumer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function CartTotal({value}) {\r\n    const{ cartTotal , clearCart}=value;\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"carttotal-container\">\r\n                <div className=\"clear-cart-container\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"clear-cart-button\" onClick={()=>clearCart()}>\r\n                            Clear Cart\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n                <h5>\r\n                    <span>SubTotal:</span>\r\n                    <strong>₹{cartTotal}</strong>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CartItem({item,value}) {\r\n    const{id,productName,imageUrl,price,total,count} = item;\r\n    const {increment,decrement,removeItem} = value;\r\n    return (\r\n        <div className=\"item-row\">\r\n            <div className=\"item-col\">\r\n                <img src={imageUrl} alt={productName} />\r\n            </div>\r\n            <div className=\"item-col\">\r\n                <span>{productName}</span>\r\n            </div>\r\n            <div className=\"item-col\">\r\n            <span>₹{price}</span>\r\n            </div>\r\n            <div className=\"item-col\">\r\n                <div className=\"btn-container\">\r\n                    <div>\r\n                        <div className=\"btn\" onClick={()=>decrement(id)}>-</div>\r\n                        <span className=\"btn\">{count}</span>\r\n                        <div className=\"btn\" onClick={()=>increment(id)}>+</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"item-col\">\r\n                <div className=\"trash-icon\" onClick={()=>removeItem(id)}>\r\n                    <i className=\"fa fa-trash\" />\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"item-col\">\r\n                <strong>Total : ₹{total}</strong>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport CartItem from './CartItemComponent';\r\n\r\nexport default function CartList({value}) {\r\n    const {cart} = value;\r\n    return (\r\n        <div className=\"item-container\">\r\n            {cart.map(item=>{\r\n                return <CartItem key={item.id} item={item} value={value}/>\r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ProductConsumer } from '../context';\r\nimport CartList from './CartListComponent';\r\nimport CartTotal from './CartTotalsComponent';\r\n\r\nexport default class Cart extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"cart-wrapper\">\r\n                <ProductConsumer>\r\n                    {(value) => {\r\n                        const {cart}= value;\r\n                        if(cart.length>0){\r\n                            return(\r\n                                <>\r\n                                    <h1>My Cart</h1> \r\n                                    <CartList value={value} />\r\n                                    <CartTotal value={value} />\r\n                                </>\r\n                            );\r\n                        }\r\n                        else {\r\n                            return(\r\n                                <div className=\"empty-container\">\r\n                                    <div className=\"empty-row\">\r\n                                        <div className=\"empty-col\"> \r\n                                            <h2>Cart is currently empty</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }}\r\n                </ProductConsumer>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Cart from './CartComponent';\r\nimport { ProductConsumer } from '../context';\r\nimport {Modal,ModalBody,ModalFooter,ModalHeader,Button} from 'reactstrap';\r\n\r\nexport default class Checkout extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            modal:false\r\n        }\r\n    }\r\n    \r\n    toggle=()=> {\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal\r\n        }));\r\n      }\r\n\r\n    alertPayment=()=>{\r\n        alert(\"Transaction Successful\");\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <ProductConsumer>\r\n            {(value) =>{\r\n          const {cart, clearCart} =value;\r\n          return(\r\n           <>\r\n            <Button color=\"danger\" onClick={this.toggle}>Check out</Button>\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n            <ModalHeader toggle={this.toggle}>Items In Cart</ModalHeader>\r\n            <ModalBody>\r\n                <Cart/>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button className={`${cart.length?\"visible\":\"hidden\"} `} color=\"primary\"  onClick={()=>{this.alertPayment();\r\n                clearCart();}}>Proceed to Payment</Button>{' '}\r\n                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n            </Modal>\r\n            </>\r\n          ) \r\n            }\r\n        }\r\n            </ProductConsumer>\r\n        \r\n        )\r\n}\r\n}\r\n","import React, { Component } from 'react'\r\nimport {ProductConsumer} from '../context';\r\nimport ProductList from './ProductListComponent';\r\nimport CartTotal from './CartTotalsComponent';\r\nimport Checkout from './CheckoutComponent';\r\nimport $ from 'jquery';\r\n\r\nexport default class Home extends Component {\r\n    componentDidMount() {\r\n        $(window).scroll(function() {\r\n            if($(window).scrollTop() + $(window).height() > $(document).height() - 100) {   \r\n                $(\".checkout-container\").css(\"position\",\"relative\");\r\n            }\r\n            else{\r\n                $(\".checkout-container\").css(\"position\",\"fixed\");\r\n                $(\".checkout-container\").css(\"bottom\",0);\r\n            }\r\n         });\r\n    }\r\n    render() {\r\n        return (\r\n            <ProductConsumer>\r\n                {(list)=>{\r\n                   return(\r\n                    <div class=\"list-content\">\r\n                        <ProductList/>\r\n                        <div class=\"checkout-container\">\r\n                            <CartTotal value={list} />\r\n                            <Checkout />\r\n                        </div>\r\n                    </div>\r\n                   )\r\n                }\r\n\r\n                }\r\n            </ProductConsumer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Default extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"default-container\">\r\n                <h1>404</h1>\r\n                <h1>Error</h1>\r\n                <h2>Page Not Found</h2>\r\n                <h3>The Requested URL<span className=\"url-class\">{this.props.location.pathname}</span>\r\n                {\" \"}\r\n                was not found\r\n                </h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Header from './HeaderComponent.js';\r\nimport Home from './HomeComponent.js';\r\nimport Cart from './CartComponent.js';\r\nimport Default from './DefaultComponent.js';\r\n\r\nexport default class Main extends Component {\r\n    \r\n    render() {      \r\n        return (\r\n            <div>\r\n              <>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/cart\" component={Cart} />\r\n                    <Route component={Default} />\r\n                </Switch>\r\n              </>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.scss';\r\nimport { ProductProvider } from './context.js';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nclass App extends Component {  \r\n  render() {\r\n    return (\r\n      <ProductProvider>\r\n        <BrowserRouter basename=\"/products-cart\">\r\n          <div className=\"app-container\">    \r\n            <Main/>\r\n          </div>\r\n        </BrowserRouter>\r\n      </ProductProvider>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n      <p>Footer</p>\r\n    </footer>\r\n  );\r\n\r\nReactDOM.render([<App key=\"1\" />, <Footer key=\"2\" />], document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}